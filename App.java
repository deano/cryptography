/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Deane Sales (18007584)
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }
    static int[] key ;
    static String answer="";

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Check Card");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("BCH error check");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Brute Force words");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Encryption");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("Decryption");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("clear");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField1.setText("Enter here");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("Enter here");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setText("Set A");

        jTextField4.setText("Enter Secret Message");

        jTextField5.setText("Enter Message 1");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField6.setText("Decryption code");

        jTextField7.setText("Set B");

        jButton7.setText("Brute Force BCH (10,6)");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setText("Task 1 - Verifying Credit Card Numbers");

        jLabel2.setText("Task 2 - BCH Generating and Error Correcting");

        jLabel3.setText("Task 3 - Brute Force Password Cracking");

        jLabel4.setText("Task 4 - Encryption App");

        jLabel5.setText("Output");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                                    .addGap(6, 6, 6)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                                .addComponent(jTextField7))
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
               
    ///////////////////////////////////////////////////////////////////
    ///////// Task 1 – Verifying Credit Card Numbers  /////////////////
    ///////////////////////////////////////////////////////////////////
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
          try {
                String ccNo = jTextField1.getText();    
                
		int[] ccNoArr = new int[ccNo.length()];
		for (int i = 0; i < ccNo.length(); i++) {
			ccNoArr[i] = Integer.valueOf(String.valueOf(ccNo.charAt(i)));
		}
		for (int i = ccNoArr.length - 2; i >= 0; i -= 2) {
			ccNoArr[i] <<= 1;
			ccNoArr[i] = ccNoArr[i] / 10 + ccNoArr[i] % 10;
		}
		int sum = 0;
		
                for (int i = 0; i < ccNoArr.length; i++) {
			sum += ccNoArr[i];
		}
                if (sum % 10 == 0) {
                    jTextArea1.append("Vaild card \n" + sum);
                }
                else{
                    jTextArea1.append("Invaild card \n " + sum);
                }
	} catch (Exception e) {
		jTextArea1.append("ERROR" );
	}
    }//GEN-LAST:event_jButton1MouseClicked
    ///////////////////////////////////////////////////////////////////
    ///////// Task 2 – BCH Generating and Error Correcting  ///////////
    ///////////////////////////////////////////////////////////////////
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

        int[] d = new int[16]; 
        String s;
	s = jTextField2.getText();
        int s1 = 0;
        int s2 = 0;
        int s3 = 0;
        int s4 = 0;
        int P = 0;
        int Q = 0;
        int R = 0;
        
        for(int u=0; u<10; u++){
            d[u] = Integer.valueOf(String.valueOf(s.charAt(u)));
            s1= (d[0] + d[1]+ d[2]+ d[3]+ d[4]+ d[5]+ d[6]+ d[7]+ d[8]+ d[9])%11;// follow the function of s1s2s3s4, and they are larger than 0.
            if(s1 < 0){
                    s1 = s1 +11;
                }
            s2= (d[0] + 2*d[1]+ 3*d[2]+ 4*d[3]+ 5*d[4]+ 6*d[5]+ 7*d[6]+ 8*d[7]+ 9*d[8]+ 10*d[9])%11;
            if(s2 < 0){
                    s2 = s2 +11;
                }
            s3= (d[0] + 4*d[1]+ 9*d[2]+ 5*d[3]+ 3*d[4]+ 3*d[5]+ 5*d[6]+ 9*d[7]+ 4*d[8]+ d[9])%11;
            if(s3 < 0){
                    s3 = s3 +11;
                }
            s4= (d[0] + 8*d[1]+ 5*d[2]+ 9*d[3]+ 4*d[4]+ 7*d[5]+ 2*d[6]+ 6*d[7]+ 3*d[8]+ 10*d[9])%11;
            if(s4 < 0){
                    s4 = s4 +11;
                }
        }
        if(s1 == 0 && s2 == 0 && s3 == 0 && s4 == 0 ){
            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n"+"no error\n");
        }else if(s1 != 0 || s2 != 0 || s3 != 0 || s4 != 0){
            P = (s2*s2 - s1*s3)%11;//follow the function of P,Q,R
            if(P < 0){
                P = P + 11;
            }
            Q = (s1*s4 - s2*s3)%11;
            if(Q < 0){
                Q = Q + 11;
            }
            R = (s3*s3 - s2*s4)%11;
            if(R < 0){
                R = R + 11;
            }
            if(P == 0 && Q == 0 && R ==0){ // two sequence of P,Q,R result.

                d[s2/s1-1] = (d[s2/s1-1] - s1)%11;
                if(d[s2/s1-1] < 0){
                    d[s2/s1-1]= d[s2/s1-1] +11;
                }

                jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n" + "single error(a = "+ s1 + " i = " + s2 / s1 + "syn: "+s1+""+s2+""+s3+""+s4+")\n");  
            }else if(P  != 0 || Q  != 0 || R !=0){
                int f = (Q*Q - 4*P*R)% 11;
                if(f < 0){
                    f = f +11;
                }
                if( f<= 0 || f == 2 || f== 6|| f==7 || f==8 || f==10){
                    jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                }else{
                    if ( f == 1){
                        int z = 1; //set a loop.when Q*Q-4PR equal to 1,3,4,5,9, the Square root equal to 1,5,2,4,3
                        int l = (int)Math.pow(2*P, 3)%11 * (int)Math.pow(2*P, 3)%11* (int)Math.pow(2*P, 3)%11; // I get a function (2p^-1)%11 = (2p^9)%11
                        if(l < 0){
                             l = l +11;
                        }
                        int i = ((-Q + z)*l)%11;
                        if(i < 0){
                             i = i +11;
                        }
                        int j = ((-Q - z)*l)%11;
                        if(j < 0){
                             j = j +11;
                        }
                        if (i == 0 || j == 0){
                        jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n"); 
                    }else{
                        int e = (int)Math.pow(i-j, 3)%11 * (int)Math.pow(i-j, 3)%11* (int)Math.pow(i-j, 3)%11;
                        if(e < 0){
                            e = e +11;
                        }
                        int b = ((i*s1 - s2)*e)%11;
                        if(b < 0){
                            b = b +11;
                        }
                        int a = (s1 - b)%11;
                        if(a < 0){
                             a = a +11;
                        }
                        d[i-1] = (d[i-1] - a)%11;
                        if(d[i-1] < 0){
                            d[i-1] = d[i-1] +11;
                        }
                        d[j-1] = (d[j-1] - b)%11;
                        if(d[j-1] < 0){
                            d[j-1] = d[j-1] +11;
                        }
                        if(d[i-1] == 10|| d[j-1] == 10 ){
                            jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }else{
                            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n"+"double error(i = "+ i + " a = " + a +" j = " + j + " b = " + b +"syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }
                        
                    } 
                    }else if ( f == 3){
                        int z = 5;
                        int l = (int)Math.pow(2*P, 3)%11 * (int)Math.pow(2*P, 3)%11* (int)Math.pow(2*P, 3)%11;
                        if(l < 0){
                             l = l +11;
                        }
                        int i = ((-Q + z)*l)%11;
                        if(i < 0){
                             i = i +11;
                        }
                        int j = ((-Q - z)*l)%11;
                        if(j < 0){
                             j = j +11;
                        }
                        if (i == 0 || j == 0){
                        jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n"); 
                    }else{
                        int e = (int)Math.pow(i-j, 3)%11 * (int)Math.pow(i-j, 3)%11* (int)Math.pow(i-j, 3)%11;
                        if(e < 0){
                            e = e +11;
                        }
                        int b = ((i*s1 - s2)*e)%11;
                        if(b < 0){
                            b = b +11;
                        }
                        int a = (s1 - b)%11;
                        if(a < 0){
                             a = a +11;
                        }
                        d[i-1] = (d[i-1] - a)%11;
                        if(d[i-1] < 0){
                            d[i-1] = d[i-1] +11;
                        }
                        d[j-1] = (d[j-1] - b)%11;
                        if(d[j-1] < 0){
                            d[j-1] = d[j-1] +11;
                        }
                        if(d[i-1] == 10|| d[j-1] == 10 ){
                            jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }else{
                            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n"+"double error(i = "+ i + " a = " + a +" j = " + j + " b = " + b +"syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }
                        
                    } 
                    }else if ( f == 4){
                        int z = 2;
                        int l = (int)Math.pow(2*P, 3)%11 * (int)Math.pow(2*P, 3)%11* (int)Math.pow(2*P, 3)%11;
                        if(l < 0){
                             l = l +11;
                        }
                        int i = ((-Q + z)*l)%11;
                        if(i < 0){
                             i = i +11;
                        }
                        int j = ((-Q - z)*l)%11;
                        if(j < 0){
                             j = j +11;
                        }
                        if (i == 0 || j == 0){
                        jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n"); 
                    }else{
                        int e = (int)Math.pow(i-j, 3)%11 * (int)Math.pow(i-j, 3)%11* (int)Math.pow(i-j, 3)%11;
                        if(e < 0){
                            e = e +11;
                        }
                        int b = ((i*s1 - s2)*e)%11;
                        if(b < 0){
                            b = b +11;
                        }
                        int a = (s1 - b)%11;
                        if(a < 0){
                             a = a +11;
                        }
                        d[i-1] = (d[i-1] - a)%11;
                        if(d[i-1] < 0){
                            d[i-1] = d[i-1] +11;
                        }
                        d[j-1] = (d[j-1] - b)%11;
                        if(d[j-1] < 0){
                            d[j-1] = d[j-1] +11;
                        }
                        if(d[i-1] == 10|| d[j-1] == 10 ){
                            jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }else{
                            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n"+"double error(i = "+ i + " a = " + a +" j = " + j + " b = " + b +"syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }
                        
                    } 
                    }else if ( f == 5){
                        int z = 4;
                        int l = (int)Math.pow(2*P, 3)%11 * (int)Math.pow(2*P, 3)%11* (int)Math.pow(2*P, 3)%11;
                        if(l < 0){
                             l = l +11;
                        }
                        int i = ((-Q + z)*l)%11;
                        if(i < 0){
                             i = i +11;
                        }
                        int j = ((-Q - z)*l)%11;
                        if(j < 0){
                             j = j +11;
                        }
                        if (i == 0 || j == 0){
                        jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n"); 
                    }else{
                        int e = (int)Math.pow(i-j, 3)%11 * (int)Math.pow(i-j, 3)%11* (int)Math.pow(i-j, 3)%11;
                        if(e < 0){
                            e = e +11;
                        }
                        int b = ((i*s1 - s2)*e)%11;
                        if(b < 0){
                            b = b +11;
                        }
                        int a = (s1 - b)%11;
                        if(a < 0){
                             a = a +11;
                        }
                        d[i-1] = (d[i-1] - a)%11;
                        if(d[i-1] < 0){
                            d[i-1] = d[i-1] +11;
                        }
                        d[j-1] = (d[j-1] - b)%11;
                        if(d[j-1] < 0){
                            d[j-1] = d[j-1] +11;
                        }
                        if(d[i-1] == 10|| d[j-1] == 10 ){
                            jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }else{
                            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n" +"double error(i = "+ i + " a = " + a +" j = " + j + " b = " + b +"syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }
                        
                    } 
                    }else if (f == 9){
                        int z = 3;
                        int l = (int)Math.pow(2*P, 3)%11 * (int)Math.pow(2*P, 3)%11* (int)Math.pow(2*P, 3)%11;
                        if(l < 0){
                             l = l +11;
                        }
                        int i = ((-Q + z)*l)%11;
                        if(i < 0){
                             i = i +11;
                        }
                        int j = ((-Q - z)*l)%11;
                        if(j < 0){
                             j = j +11;
                        }
                        if (i == 0 || j == 0){
                        jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n"); 
                    }else{
                        int e = (int)Math.pow(i-j, 3)%11 * (int)Math.pow(i-j, 3)%11* (int)Math.pow(i-j, 3)%11;
                        if(e < 0){
                            e = e +11;
                        }
                        int b = ((i*s1 - s2)*e)%11;
                        if(b < 0){
                            b = b +11;
                        }
                        int a = (s1 - b)%11;
                        if(a < 0){
                             a = a +11;
                        }
                        d[i-1] = (d[i-1] - a)%11;
                        if(d[i-1] < 0){
                            d[i-1] = d[i-1] +11;
                        }
                        d[j-1] = (d[j-1] - b)%11;
                        if(d[j-1] < 0){
                            d[j-1] = d[j-1] +11;
                        }
                        if(d[i-1] == 10|| d[j-1] == 10 ){
                            jTextArea1.append("??" + "more than 2 no sqrt(syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }else{
                            jTextArea1.append(""+d[0]+""+d[1]+""+d[2]+""+d[3]+""+d[4]+""+d[5]+""+d[6]+""+d[7]+""+d[8]+""+d[9]+"\n" +"double error(i = "+ i + " a = " + a +" j = " + j + " b = " + b +"syn: "+s1+""+s2+""+s3+""+s4+",pqr: "+P+","+Q+","+R+")\n");
                        }
                        
                    } 
                    }
                    
                }
                
                
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked
    ///////////////////////////////////////////////////////////////////
    ///////// Task 3 – Brute Force Password Cracking   ////////////////
    ///////////////////////////////////////////////////////////////////

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        char ar[]={ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',
                's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3',
                '4', '5', '6', '7', '8', '9'};
        String enc = jTextField3.getText();
        final int MAX_WORDLENGTH = 20;//this limit the max length
        for(int wordlength = 1; wordlength <= MAX_WORDLENGTH; wordlength++)
        {
            if(generate(wordlength,ar,enc))
            {
                jTextArea1.append("Match found!! The decrypted string is : "+ answer);
                break;
            }
        }
    }//GEN-LAST:event_jButton3MouseClicked
    /////////////////////////////////////////////////////
    ///////// Task 4 – Encryption App    ////////////////
    /////////////////////////////////////////////////////     
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        String res = jTextField4.getText();
        String mes = jTextField5.getText();
        int z1 = 25;
        int len = res.length();
        key = new int[len];
        String finalresult;
        char resarr[]= res.toUpperCase().toCharArray();
        StringBuilder result = new StringBuilder();
        int temp = (resarr[0]-'A'+z1)%26<0?(resarr[0]-'A'+z1)%26+26:(resarr[0]-'A'+z1)%26;
        key[0]=z1;
        result.append((char)(temp+'A'));
        for(int i=1;i<len;i++){
            temp = (resarr[i]-'A'+resarr[i-1]-'A')%26<0?((resarr[i]-'A'+resarr[i-1]-'A')%26+26):(resarr[i]-'A'+resarr[i-1]-'A')%26;
            key[i]=resarr[i-1]-'A';
            result.append((char)(temp+'A'));
        }
        finalresult = result + mes;
        jTextArea1.append(finalresult);

    }//GEN-LAST:event_jButton4MouseClicked
    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        String res = jTextField6.getText();
        int len = res.length()-10;
        //key = new int[len];
        char resarr[]= res.toUpperCase().toCharArray();
        StringBuilder result = new StringBuilder();
        int temp = (resarr[0]-'A'-key[0])%26<0?(resarr[0]-'A'-key[0])%26+26:(resarr[0]-'A'-key[0])%26;
        result.append((char)(temp+'A'));
        for(int i=1;i<len;i++){
            temp = (resarr[i]-'A'-key[i])%26<0?((resarr[i]-'A'-key[i])%26+26):(resarr[i]-'A'-key[i])%26;
            result.append((char)(temp+'A'));
        }
        jTextArea1.append(" " + result + " " + truncateHeadString(res,10));
    }//GEN-LAST:event_jButton5MouseClicked
    ///////////////////////////////////////////////////////////////////
    ///////// Task 3 – Brute Force Password Cracking   ////////////////
    ///////////////////////////////////////////////////////////////////
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        char ar[]={  '0', '1', '2', '3',
                '4', '5', '6', '7', '8', '9'};
        String enc = jTextField7.getText();
        final int MAX_WORDLENGTH = 6;//this limit the max length
        for(int wordlength = 6; wordlength <= MAX_WORDLENGTH; wordlength++)//start from 1 length to 6 length.
        {
            try {
                if(generates(wordlength,ar,enc))
                {
                    jTextArea1.append("Match found!! The decrypted string is : "+ BCH(answer));
                    break;
                }
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton6MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private static boolean generate(int wordlength, char[] alphabet,String enc)
    {
        final long MAX_WORDS = (long) Math.pow(alphabet.length, wordlength);
        final int RADIX = alphabet.length;
        for (long i = 0; i < MAX_WORDS; i++)
        {
            int[] indices = convertToRadix(RADIX, i, wordlength);
            char[] word = new char[wordlength];
            for (int k = 0; k < wordlength; k++)
            {
                word[k] = alphabet[indices[k]];
            }
            String ss=new String(word);
            if(compareit(encrypts(ss),enc))//when the answer work out, we will test with what you input. because the sha1 is unique.
            {
                answer=ss;
                return true;
            }
        }
        return false;
    }
    private static int[] convertToRadix(int radix, long number, int wordlength)
    {
        int[] indices = new int[wordlength];
        for (int i = wordlength - 1; i >= 0; i--)
        {
            if (number > 0)
            {
                int rest = (int) (number % radix);
                number /= radix;
                indices[i] = rest;
            }
            else
            {
                indices[i] = 0;
            }

        }
        return indices;
    }
    public static String encrypts(String str) //this will go back to get answer's sha1
    {
            byte[] defaultBytes = str.getBytes();
            try
            {
                MessageDigest algorithm = MessageDigest.getInstance("SHA1");
                algorithm.reset();
                algorithm.update(defaultBytes);
                byte messageDigest[] = algorithm.digest();
                StringBuffer hexString = new StringBuffer();
                for (int i = 0; i < messageDigest.length; i++)
                {
                    hexString.append(Integer.toHexString(0xFF & messageDigest[i]));
                }
                str = hexString + "";
            } catch(NoSuchAlgorithmException e)
              {
                  e.printStackTrace();
              }
            return str;
    }
    public static boolean compareit(String s2, String s1) //just compared with answer's sha1 and what you input.
    {
        String a=s1;
        if(s1.contains(s2))
            return true;
        else
        {
            /*Java often misses out some zeroes while encrypting text, so here
             * I'm removing zeroes one by one from the original string and then
             * performing the check again*/
            while(a.indexOf('0')!=-1)
            {
                a=a.substring(0,a.indexOf('0'))+a.substring(a.indexOf('0')+1,a.length());
                if(a.contains(s2))
                    return true;
            }
        }
        return false;
    }
        private static boolean generates(int wordlength, char[] alphabet,String enc) throws NoSuchAlgorithmException, UnsupportedEncodingException
    {
        final long MAX_WORDS = (long) Math.pow(alphabet.length, wordlength);
        final int RADIX = alphabet.length;
        for (long i = 0; i < MAX_WORDS; i++)
        {
            int[] indices = convertToRadix(RADIX, i, wordlength);
            char[] word = new char[wordlength];
            for (int k = 0; k < wordlength; k++)
            {
                word[k] = alphabet[indices[k]];
            }
            String ss=new String(word);
            if(compareits((BCH(ss)),enc))//when the answer work out, we will test with what you input. because the sha1 is unique.
            {
                answer=ss;
                return true;
            }
        }
        return false;
    }
    public static String BCH(String str){
        int[] d = new int[6];  //read the test from field1
        int d7 = 0;
        int d8 = 0;
        int d9 = 0;
        int d10 = 0;
        String stra;
        for(int i=0; i<6; i++){
            d[i] = Integer.valueOf(String.valueOf(str.charAt(i)));// change the string to integer
            d7= (d[0]*4 + d[1]*10+9*d[2]+2*d[3]+d[4]+7*d[5])%11;
            d8= (d[0]*7 + d[1]*8+7*d[2]+d[3]+9*d[4]+6*d[5])%11;
            d9= (d[0]*9 + d[1]+7*d[2]+8*d[3]+7*d[4]+7*d[5])%11;
            d10= (d[0] + d[1]*2+9*d[2]+10*d[3]+4*d[4]+d[5])%11;
            //Use formula to calculate d7...d10
        }
        stra = str + d7 + d8 + d9 + d10;
        return stra;
    }    
    public static String SHA1(String text)  
    throws NoSuchAlgorithmException, UnsupportedEncodingException  { 
	MessageDigest md; 
	md = MessageDigest.getInstance("SHA-1"); 
	byte[] sha1hash = new byte[40]; 
	md.update(text.getBytes("iso-8859-1"), 0, text.length()); 
	sha1hash = md.digest(); 
	return convertToHex(sha1hash); 
    } 
    private static String convertToHex(byte[] data) { 
        StringBuffer buf = new StringBuffer(); 
        for (int i = 0; i < data.length; i++) { 
        	int halfbyte = (data[i] >>> 4) & 0x0F; 
        	int two_halfs = 0; 
        	do { 
	            if ((0 <= halfbyte) && (halfbyte <= 9)) 
	                buf.append((char) ('0' + halfbyte)); 
	            else 
	            	buf.append((char) ('a' + (halfbyte - 10))); 
	            halfbyte = data[i] & 0x0F; 
        	} while(two_halfs++ < 1); 
        } 
        return buf.toString(); 
    }   
        public static boolean compareits(String s2, String s1) 
            throws NoSuchAlgorithmException, UnsupportedEncodingException{
        String a = s1;
        String b = SHA1(s2);
        if (a.contains(b)){
            return true;
        }
        return false;
    }
public static String truncateHeadString(String origin, int count) {
    if (origin == null || origin.length() < count) {
        return null;
    }
    char[] arr = origin.toCharArray();
    char[] ret = new char[arr.length - count];
    for (int i = 0; i < ret.length; i++) {
        ret[i] = arr[i + count];
    }
    return String.copyValueOf(ret);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
